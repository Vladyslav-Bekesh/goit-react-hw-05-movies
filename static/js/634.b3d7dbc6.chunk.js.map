{"version":3,"file":"static/js/634.b3d7dbc6.chunk.js","mappings":"+PA0BA,MAvBA,YAAmC,IAAZA,EAAW,EAAXA,QACrB,OAA+B,IAA3BA,EAAQC,QAAQC,QACX,wBAAI,gBAGT,wBACGF,EAAQC,QAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GACvC,OACE,2BACE,wBAAKF,KACL,0BAAOC,MAFAC,EAKZ,KAIR,ECuBD,MApCA,YAA8B,EAAXN,QAAY,IAC7B,GAAwBO,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACRH,EAAU,WAEV,IAAMI,EAAS,mCAAG,8GAEaC,EAAAA,EAAAA,IAAcJ,GAF3B,OAERK,EAFQ,OAIdR,EAAQQ,GAERN,EAAU,QANI,gDAQdA,EAAU,YACVO,QAAQC,MAAM,qCAAd,MATc,yDAAH,qDAYfJ,GACD,GAAE,CAACH,KAGF,gCACc,YAAXF,IAAwB,wBAAI,YACjB,aAAXA,IAAyB,wBAAI,UAClB,SAAXA,IAAqB,SAAC,EAAD,CAAaV,QAASQ,MAGjD,C","sources":["components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ReviewsList({ reviews }) {\n  if (reviews.results.length === 0) {\n    return <h2>No reviews</h2>;\n  } else {\n    return (\n      <ul>\n        {reviews.results.map(({ author, content, id }) => {\n          return (\n            <li key={id}>\n              <h3>{author}</h3>\n              <span>{content}</span>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nReviewsList.propTypes = {\n  reviews: PropTypes.object.isRequired,\n};\n\nexport default ReviewsList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchReviews } from '../../utils/fetch';\n\nimport ReviewsList from '../ReviewsList';\n\n\nfunction Reviews({ reviews }) {\n  const [data, setData] = useState();\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus('pending');\n\n    const fetchData = async () => {\n      try {\n        const responseData = await searchReviews(movieId);\n\n        setData(responseData);\n\n        setStatus('done');\n      } catch (error) {\n        setStatus('rejected');\n        console.error('Error occurred during API request:', error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending' && <h2>loading</h2>}\n      {status === 'rejected' && <h2>error</h2>}\n      {status === 'done' && <ReviewsList reviews={data}/>}\n    </>\n  );\n}\n\n// Reviews.propTypes = {\n\n// }\n\nexport default Reviews;\n"],"names":["reviews","results","length","map","author","content","id","useState","data","setData","status","setStatus","movieId","useParams","useEffect","fetchData","searchReviews","responseData","console","error"],"sourceRoot":""}