{"version":3,"file":"static/js/586.3549d9c4.chunk.js","mappings":"kMAWA,MARA,WACE,OACE,SAAC,KAAD,CAAMA,GAAG,IAAIC,QAAS,kBAAMC,OAAOC,QAAQC,MAArB,EAAtB,UACE,4BAAQ,UAGb,C,4ECeD,MAtBA,WACE,OACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,mBAEbC,aAAa,GACbC,SAAS,EACTC,iBAAiB,GACjBC,iBAAiB,GACjBC,SAAS,GACTC,UAAU,4BAGf,C,yKCiCD,MAhDA,YAA6B,IAATC,EAAQ,EAARA,KACVC,EAAgED,EAAhEC,eAAgBC,EAAgDF,EAAhDE,aAAcC,EAAkCH,EAAlCG,SAAUC,EAAwBJ,EAAxBI,YAAaC,EAAWL,EAAXK,OAEvDC,EAAQ,UAAMC,EAAAA,IAAN,OAAkBH,GAUhC,OACE,iCACE,4BACE,0BACE,4BAAQ,WAAe,IAAEH,MAE3B,0BACE,4BAAQ,YAAgB,IAAEC,EAAaM,QAAQ,OAEjD,0BACE,4BAAQ,cAAkB,IAAEL,MAE9B,0BACE,4BAAQ,YAAgB,IArBhC,SAA0BE,GACxB,OAAOA,EACJI,KAAI,YACH,OADiB,EAAXC,IAEP,IACAC,KAAK,KACT,CAeiCC,CAAiBP,OAE7C,gBAAKQ,IAAKP,EAAUQ,IAAKb,QAE3B,2BACE,yBACE,SAAC,KAAD,CAASpB,GAAG,OAAZ,SAAmB,cAGrB,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,SAAsB,kBAG1B,SAAC,KAAD,MAGL,ECJD,MArCA,WACE,OAAwBkC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOf,EAAP,KAAagB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMC,GAAN,8EAChBL,EAAU,WADM,mBAGaM,EAAAA,EAAAA,IAAWD,GAHxB,OAGRE,EAHQ,OAKdT,EAAQS,GACRP,EAAU,QANI,gDAQdA,EAAU,YACVQ,QAAQC,MAAM,qCAAd,MATc,yDAAH,sDAafL,EAAUH,EACX,GAAE,CAACA,KAGF,iCACE,SAACS,EAAA,EAAD,IACY,YAAXX,IAAwB,SAACY,EAAA,EAAD,IACb,aAAXZ,IAAyB,wBAAI,UAClB,SAAXA,IACC,iCACE,SAAC,EAAD,CAAUjB,KAAMA,KAChB,SAAC,KAAD,SAKT,C","sources":["components/GoBackButton/GoBackButton.jsx","components/Loader/Loader.jsx","components/FilmCard/FilmCard.jsx","pages/Film/Film.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction BackButton() {\n  return (\n    <Link to=\"#\" onClick={() => window.history.back()}>\n      <button>Back</button>\n    </Link>\n  );\n}\n\nexport default BackButton;\n","import { CirclesWithBar } from 'react-loader-spinner';\n\nfunction LoaderSpinner() {\n  return (\n    <CirclesWithBar\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      wrapperStyle={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      barColor=\"\"\n      ariaLabel=\"circles-with-bar-loading\"\n    ></CirclesWithBar>\n  );\n}\n\nexport default LoaderSpinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nimport { ImgAdress } from '../../utils/fetch';\n\n\nfunction FilmCard({ data }) {\n  const { original_title, vote_average, overview, poster_path, genres } = data;\n\n  const imageUrl = `${ImgAdress}${poster_path}`;\n  \n  function makeGenresString(genres) {\n    return genres\n      .map(({ name }) => {\n        return name;\n      })\n      .join(', ');\n  }\n  \n  return (\n    <>\n      <div>\n        <p>\n          <strong>Title:</strong> {original_title}\n        </p>\n        <p>\n          <strong>Rating:</strong> {vote_average.toFixed(1)}\n        </p>\n        <p>\n          <strong>Overview:</strong> {overview}\n        </p>\n        <p>\n          <strong>Genres:</strong> {makeGenresString(genres)}\n        </p>\n        <img src={imageUrl} alt={original_title} />\n      </div>\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Actors</NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n}\n\nFilmCard.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default FilmCard;\n","import React, { useEffect, useState } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\n\nimport { searchById } from '../../utils/fetch';\nimport GoBackButton from '../../components/GoBackButton';\nimport Loader from '../../components/Loader';\nimport FilmCard from '../../components/FilmCard';\n\nfunction Film() {\n  const [data, setData] = useState({});\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async id => {\n      setStatus('pending');\n      try {\n        const responseData = await searchById(id);\n\n        setData(responseData);\n        setStatus('done');\n      } catch (error) {\n        setStatus('rejected');\n        console.error('Error occurred during API request:', error);\n      }\n    };\n\n    fetchData(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackButton />\n      {status === 'pending' && <Loader/>}\n      {status === 'rejected' && <h2>error</h2>}\n      {status === 'done' && (\n        <>\n          <FilmCard data={data} />\n          <NavLink></NavLink>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Film;\n"],"names":["to","onClick","window","history","back","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","outerCircleColor","innerCircleColor","barColor","ariaLabel","data","original_title","vote_average","overview","poster_path","genres","imageUrl","ImgAdress","toFixed","map","name","join","makeGenresString","src","alt","useState","setData","status","setStatus","movieId","useParams","useEffect","fetchData","id","searchById","responseData","console","error","GoBackButton","Loader"],"sourceRoot":""}