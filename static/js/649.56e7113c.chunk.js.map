{"version":3,"file":"static/js/649.56e7113c.chunk.js","mappings":"+PAsCA,MAlCA,YAAiC,IAAXA,EAAU,EAAVA,OASpB,OACE,iCACE,wBAAI,YACJ,wBACGA,EAAOC,KAAKC,KAAI,YAAqD,IAZzDC,EAYOC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,GAC1D,OACE,2BACE,gBACEC,KAhBKL,EAgBWG,EAfxBH,EACI,GAAN,OAAUM,EAAAA,IAAV,OAAsBN,GAEf,uCAaGO,IAAI,+CAEN,yBAAG,cAAYN,MACf,yBAAG,cAAYC,OANRE,EASZ,QAIR,ECMD,MAhCA,WACE,OAAwBI,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACRH,EAAU,WAEV,IAAMI,EAAS,mCAAG,8GAEaC,EAAAA,EAAAA,IAAcJ,GAF3B,OAERK,EAFQ,OAIdR,EAAQQ,GAERN,EAAU,QANI,gDAQdA,EAAU,YACVO,QAAQC,MAAM,qCAAd,MATc,yDAAH,qDAYfJ,GACD,GAAE,CAACH,KAGF,gCACc,YAAXF,IAAwB,wBAAI,YACjB,aAAXA,IAAyB,wBAAI,UAClB,SAAXA,IAAqB,SAAC,EAAD,CAAYd,OAAQY,MAG/C,C","sources":["components/ActorsList/ActorsList.jsx","components/Actors/Actors.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ImgAdress } from '../../utils/fetch';\n\nfunction ActorsList({ actors }) {\n  const makeImgSrc = img => {\n    if (img) {\n      return `${ImgAdress}${img}`;\n    } else {\n      return 'https://via.placeholder.com/300x450';\n    }\n  };\n\n  return (\n    <>\n      <h2>Actors</h2>\n      <ul>\n        {actors.cast.map(({ character, original_name, profile_path, id }) => {\n          return (\n            <li key={id}>\n              <img\n                src={makeImgSrc(profile_path)}\n                alt=\"here can be actor, but somethig go wrong)\"\n              />\n              <p>Character: {character}</p>\n              <p>Real name: {original_name}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nActorsList.propTypes = {\n  actors: PropTypes.object.isRequired,\n};\n\nexport default ActorsList;\n","import React, { useEffect, useState } from 'react';\nimport { searchCredits } from '../../utils/fetch';\nimport { useParams } from 'react-router-dom';\n\nimport ActorsList from '../ActorsList';\n\nfunction Actors() {\n  const [data, setData] = useState();\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus('pending');\n\n    const fetchData = async () => {\n      try {\n        const responseData = await searchCredits(movieId);\n\n        setData(responseData);\n\n        setStatus('done');\n      } catch (error) {\n        setStatus('rejected');\n        console.error('Error occurred during API request:', error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending' && <h2>loading</h2>}\n      {status === 'rejected' && <h2>error</h2>}\n      {status === 'done' && <ActorsList actors={data} />}\n    </>\n  );\n}\n\nexport default Actors;\n"],"names":["actors","cast","map","img","character","original_name","profile_path","id","src","ImgAdress","alt","useState","data","setData","status","setStatus","movieId","useParams","useEffect","fetchData","searchCredits","responseData","console","error"],"sourceRoot":""}